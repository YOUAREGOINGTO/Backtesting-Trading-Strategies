{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "04f804ec",
   "metadata": {},
   "source": [
    "## Backtesting Trading Strategy"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f683e747",
   "metadata": {},
   "source": [
    "## Asset Selection"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2be5e410",
   "metadata": {},
   "source": [
    "We Should select Volatile Assets for Trading.For that we are using  High to Low ratio of the assets."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ac14c777",
   "metadata": {},
   "source": [
    "((H1/L1) + (H2/L2) + ...+ (H14/L14))/14 - 1  > 3.5%"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1f98adc",
   "metadata": {},
   "source": [
    "H - High,L -low , Samplesize - 14"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dd7c2e24",
   "metadata": {},
   "source": [
    "## Strategy"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6984b3e3",
   "metadata": {},
   "source": [
    "Assuming there is only one Standard deviation move with respect to Moving Average - Mean Reversion ."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "12d10185",
   "metadata": {},
   "source": [
    "Z-score = (closeprice - rollingmovingaverage20)/(rollingstandard Deviation)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bfb6bd0f",
   "metadata": {},
   "source": [
    "if Z-score > 1 we take short position According to Mean Reversion and  we close our position when Z-Score <0\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee9f703d",
   "metadata": {},
   "source": [
    "if Z-score < -1 we take long Position According to Mean Reversion and we close our position when Z-Score >0."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26a96f16",
   "metadata": {},
   "source": [
    "# Platform For Backtesting"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb9c5f2f",
   "metadata": {},
   "source": [
    "We use Quantiacs Platform for Backtesting and the time frame is Daily."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1eb6dd88",
   "metadata": {},
   "source": [
    "It assigns each asset Weights for Backtesting"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1d22f69",
   "metadata": {},
   "source": [
    "# Importing Libraries"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23febee8",
   "metadata": {},
   "source": [
    "xarray library is similar to numpy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c174480f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import xarray as xr #Array\n",
    "\n",
    "import qnt.ta as qnta #Technical Indicators\n",
    "import qnt.data as qndata #Loading The Data\n",
    "import qnt.output as qnout \n",
    "\n",
    "import qnt.stats as qns #Statistics.\n",
    "import qnt.backtester as qnbt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fb8f8757",
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_data(period):\n",
    "    return qndata.stocks.load_ndx_data(tail=period)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9a52cdf7",
   "metadata": {},
   "outputs": [],
   "source": [
    "def strategy(data):\n",
    "    close = data.sel(field =\"close\")\n",
    "    high = data.sel(field = \"high\")\n",
    "    low = data.sel(field =\"low\")\n",
    "    a = ((high/low)-1) * 100 # Asset Selection\n",
    "    sma =qnta.sma(close,20) #Rolling Moving Average\n",
    "    st = qnta.variance(close, 20)\n",
    "    std = np.sqrt(st) # Rolling Standard Deviation\n",
    "    z_score = (close - sma)/(std)\n",
    "    is_liquid = data.sel(field=\"is_liquid\") # Ensures that Stock is in Nasdaq-100 at that time.\n",
    "    \n",
    "    asset_name_all = data.coords['asset'].values\n",
    "    weights = xr.zeros_like(data.sel(field='close'))\n",
    "    \n",
    "    for asset in asset_name_all:\n",
    "        if np.mean(a.loc[dict(asset = asset)][-14:]) > 3.5: #Asset Selection\n",
    "            if weights.loc[dict(asset = asset)][-1] == 0:\n",
    "                if  z_score.loc[dict(asset = asset)][-1] < -1 :\n",
    "                    weights.loc[dict(asset = asset)][-1] = 1 #Buy Position\n",
    "                 \n",
    "                elif z_score.loc[dict(asset = asset)][-1] >1 :\n",
    "                    weights.loc[dict(asset=asset)][-1] = -1 #Short Position\n",
    "            \n",
    "            \n",
    "            elif weights.loc[(dict(asset = asset))][-1] > 0 :\n",
    "                if z_score.loc[dict(asset = asset)][-1]  > 0:\n",
    "                    weights.loc[dict(asset=asset)][-1] = 0 #Closing Long Position\n",
    "                \n",
    "                \n",
    "            elif weights.loc[(dict(asset = asset))][-1] <0:\n",
    "                if z_score.loc[dict(asset = asset)][-1] < 0:\n",
    "                    weights.loc[dict(asset=asset)][-1] = 0 # Closing Short Position\n",
    "                \n",
    "                \n",
    "   \n",
    "    return weights * is_liquid\n",
    "                \n",
    "            \n",
    "                \n",
    "                      \n",
    "            \n",
    "\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "093fc37c",
   "metadata": {},
   "outputs": [],
   "source": [
    "weights = qnbt.backtest(\n",
    "    competition_type = \"stocks_nasdaq100\",\n",
    "    load_data        = load_data,\n",
    "    lookback_period  = 365*4,\n",
    "    start_date       = \"2006-01-01\",\n",
    "    strategy         = strategy,\n",
    "    analyze          = True,\n",
    "    build_plots      = True\n",
    ")"
   ]
  },
  {
   "attachments": {
    "Screenshot%20%28346%29.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "3840bd1d",
   "metadata": {},
   "source": [
    "![Screenshot%20%28346%29.png](attachment:Screenshot%20%28346%29.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9fce7179",
   "metadata": {},
   "source": [
    "To Run the Code go to \"https://quantiacs.com/\" and use this Code."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2e3b705e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
